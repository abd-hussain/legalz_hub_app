name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
        - name: üìö Git Checkout
          uses: actions/checkout@v2

        - name: üê¶ Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.19.0'
            cache: true
    
        - name: üì¶ Set up key.properties
          run: |
            echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > android/key.properties
            echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
            echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
            echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/androidkeystore.jks
    
        - name: üì¶ Set up local.properties
          run: |
              echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties
    
        - name: üì¶ Set up Play Store Secret
          run: |
              echo "${{ secrets.GOOGLE_PLAY_STORE_KEY }}" | base64 --decode > android/play_store_secret.json
    
        - name: üéØ Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.6
            rubygems: latest
    
        - name: üõ†Ô∏è Build and Deploy
          run: |
            flutter pub get
            make deploy-android

  ios:
    runs-on: macOS-13

    steps:
        - name: üìö Git Checkout
          uses: actions/checkout@v3

        - name: üê¶ Setup Flutter
          uses: subosito/flutter-action@v2
          with:
            flutter-version: '3.19.1'
            cache: true

        - name: üì¶ Set up App Store Connect
          run: |
              echo "${{ secrets.APP_STORE_CONNECT }}" | base64 --decode > ios/app_store_connect.json

        - name: üéØ Setup Fastlane
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.6.1
            rubygems: 3.2.3

        - name: üì¶ Cleaning before we start
          run: |
              flutter clean
              cd ios && rm -rf Podfile.lock
              cd ios && rm -rf Pods
              cd ios && pod install
              cd ..
              flutter pub get
              cd ios && pod install

        - name: üì¶ Update Fastlane
          run: |
              cd ios && bundle update fastlane
    
        - name: üõ†Ô∏è Build and Deploy
          run: |
            make deploy-ios
          env:
            MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
            MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}
            FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
            MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
            MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}

  web:
    runs-on: ubuntu-latest

    steps:
      - name: üìö Git Checkout
        uses: actions/checkout@v2

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          cache: true

      - name: üì¶ Install Dependencies
        run: |
            flutter pub global activate very_good_cli
            very_good --analytics false
            very_good packages get --recursive

      - name: üõ†Ô∏è Build the application
        run: flutter build web -t lib/main.dart
      
      - name: ‚¨áÔ∏è Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build/web

      - name: ‚¨áÔ∏è Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build/web

      - name: üéØ Deploy to firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_LEGALZHUB }}"
          channelId: live
          projectId: legalzhub
